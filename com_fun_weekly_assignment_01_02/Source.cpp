#include <iostream>

/*
	Project Euler Problem 02

	Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

bool isEven(int num)
{
	return num % 2 == 0;
}

int solve(int n)
{
	int total = 2;
	int memory[2] = { 1, 2 };
	while (memory[0] <= 4000000 || memory[1] <= 4000000)
	{
		int fib_n = memory[0] + memory[1];
		memory[memory[0] > memory[1] ? 1 : 0] = fib_n;
		if (isEven(fib_n))
		{
			//std::cout << fib_n;
			total += fib_n;
		}
	}

	return total;
}


int main() 
{
	std::cout << solve(4000);
	return 0;
}

/*
	ans = 4613732
*/



